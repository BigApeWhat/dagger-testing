/*
 * Copyright (C) 2015 Tomasz Rozbicki
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.robolectric'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "pl.dagger.testing"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    // Android compatibility
    compile 'com.android.support:support-v4:22.0.0@aar'
    compile 'com.android.support:appcompat-v7:22.0.0@aar'
    compile 'com.android.support:support-annotations:22.0.0'

    // https://github.com/google/dagger
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'

    androidTestCompile 'com.google.dagger:dagger:2.0'
    androidTestApt 'com.google.dagger:dagger-compiler:2.0'

    testCompile 'com.google.dagger:dagger:2.0'
    testCompile 'com.google.dagger:dagger-compiler:2.0'
    // testApt 'com.google.dagger:dagger-compiler:2.0' // Waiting for gradle plugin 1.3.x
    // https://bitbucket.org/hvisser/android-apt/issue/22/dagger-robolectric-gradle-apt-source-not

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0-rc2'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.google.dexmaker:dexmaker:1.0'
    testCompile 'com.google.dexmaker:dexmaker-mockito:1.0'
    testCompile 'com.squareup.assertj:assertj-android:1.0.0'

    // Espresso
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.1'
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:22.0.0'
    }
}

robolectric {
    // Configure includes / excludes
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    // Configure max heap size of the test JVM
    maxHeapSize = '2048m'

    // Configure the test JVM arguments - Does not apply to Java 8
    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'

    // Specify max number of processes (default is 1)
    maxParallelForks = 4

    // Specify max number of test classes to execute in a test process
    // before restarting the process (default is unlimited)
    forkEvery = 150

    // configure whether failing tests should fail the build
    ignoreFailures true

    // use afterTest to listen to the test execution results
    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}

retrolambda {
    jdk System.getenv('JAVA8_HOME')
    oldJdk System.getenv('JAVA_HOME')
    javaVersion JavaVersion.VERSION_1_7
    incremental true
}
